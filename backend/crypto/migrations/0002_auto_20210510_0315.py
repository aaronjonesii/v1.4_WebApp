# Generated by Django 3.1.7 on 2021-05-10 07:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('crypto', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CryptoToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('blockchain', models.CharField(choices=[('BTC', 'Bitcoin Blockchain'), ('ADA', 'Cardano Blockchain'), ('ETH', 'Ethereum Blockchain'), ('BCH', 'Bitcoin Cash Blockchain'), ('BNB-BEP2', 'Binance Chain Blockchain'), ('BNB-BEP20', 'Binance Smart Chain Blockchain'), ('UNKNOWN', 'Unknown Blockchain')], default='UNKNOWN', max_length=9)),
                ('name', models.CharField(help_text='Project name', max_length=80, verbose_name='project name')),
                ('symbol', models.CharField(blank=True, help_text='Token symbol', max_length=20, verbose_name='token symbol')),
                ('contract_address', models.CharField(blank=True, help_text='Contract address', max_length=42)),
                ('launch_date', models.DateTimeField(blank=True, help_text='Project launch date, format: YYYY-MM-DD HH:MM:SS', null=True)),
                ('description', models.TextField(blank=True, help_text='Projects purpose or future details', verbose_name='project description')),
                ('website', models.URLField(blank=True, help_text='Project website URL link', verbose_name='project website')),
                ('whitepaper', models.URLField(blank=True, help_text='Project whitepaper URL link', verbose_name='project whitepaper')),
                ('is_flagged', models.BooleanField(default=False, help_text='Designates whether the token is flagged.', verbose_name='flagged')),
                ('balance', models.FloatField(blank=True, default=0, help_text='Amount of tokens in wallets')),
                ('status', models.CharField(choices=[('PUBLIC', 'Public'), ('PRIVATE', 'Private'), ('TRASH', 'Trash'), ('ARCHIVE', 'Archive')], default='PRIVATE', max_length=7)),
                ('creator', models.ForeignKey(help_text='User who created the BSCToken.', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('socials', models.ForeignKey(blank=True, db_column='socials', null=True, on_delete=django.db.models.deletion.CASCADE, to='crypto.tokensocials')),
                ('swaps', models.ManyToManyField(blank=True, to='crypto.SwapTransaction')),
            ],
            options={
                'verbose_name': 'Cryptocurrency Token',
                'verbose_name_plural': 'Cryptocurrency Tokens',
            },
        ),
        migrations.AlterField(
            model_name='swaptransaction',
            name='from_token',
            field=models.ForeignKey(db_column='from_token', help_text='Token swapped from', on_delete=django.db.models.deletion.PROTECT, related_name='swaps_from_token', to='crypto.cryptotoken'),
        ),
        migrations.AlterField(
            model_name='swaptransaction',
            name='to_token',
            field=models.ForeignKey(db_column='to_token', help_text='Token swapped to', on_delete=django.db.models.deletion.PROTECT, related_name='swaps_to_token', to='crypto.cryptotoken'),
        ),
        migrations.AlterField(
            model_name='tokensocials',
            name='token',
            field=models.ForeignKey(db_column='token', on_delete=django.db.models.deletion.CASCADE, to='crypto.cryptotoken'),
        ),
        migrations.DeleteModel(
            name='BSCToken',
        ),
    ]
